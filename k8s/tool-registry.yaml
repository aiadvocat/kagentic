apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: kagentic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: tool-registry
  namespace: kagentic
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: tool-registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tool-registry
  namespace: kagentic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tool-registry
  template:
    metadata:
      labels:
        app: tool-registry
    spec:
      containers:
      - name: postgres
        image: docker.io/library/kagentic-tool-registry:latest
        imagePullPolicy: IfNotPresent  
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: tool_registry
        - name: POSTGRES_USER
          value: kagentic
        - name: POSTGRES_PASSWORD
          value: kagentic123
        - name: POSTGRES_HOST_AUTH_METHOD
          value: scram-sha-256
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=scram-sha-256"
        - name: POSTGRES_LOGGING
          value: "on"
        - name: POSTGRES_LOG_STATEMENT
          value: "all"
        - name: POSTGRES_LOG_CONNECTIONS
          value: "on"
        - name: POSTGRES_LOG_DISCONNECTIONS
          value: "on"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc 